---
# Copyright 2018, SUSE LINUX GmbH.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO(odyssey4me):
# This can be simplified once all the roles are using
# python_venv_build. We can then switch to using a
# set of constraints in pip.conf inside the venv,
# perhaps prepared by giving a giving a list of
# constraints to the role.
- name: Create developer mode constraint file
  copy:
    dest: "/opt/developer-pip-constraints.txt"
    content: |
      {% for item in ceilometer_developer_constraints %}
      {{ item }}
      {% endfor %}
  when:
    - ceilometer_developer_mode | bool

- name: Ensure remote wheel building is disabled in developer mode
  set_fact:
    venv_build_host: "{{ ansible_hostname }}"
  when:
    - ceilometer_developer_mode | bool

- name: Install the python venv
  include_role:
    name: "python_venv_build"
    private: yes
  vars:
    venv_build_distro_package_list: "{{ ceilometer_devel_distro_packages }}"
    venv_install_destination_path: "{{ ceilometer_bin | dirname }}"
    venv_pip_install_args: "{{ ceilometer_pip_install_args }}"
    venv_pip_packages: "{{ (ceilometer_oslomsg_amqp1_enabled | bool) | ternary(ceilometer_pip_packages + ceilometer_optional_oslomsg_amqp1_pip_packages, ceilometer_pip_packages) }}"
    venv_facts_when_changed:
      - section: "ceilometer"
        option: "venv_tag"
        value: "{{ ceilometer_venv_tag }}"

# Note (odyssey4me):
# These python libraries have C bindings which tend to be very
# particular about the version of their companion packages.
# To ensure things run smoothly for stable releases, we opt to
# use the distro packages for these and symlink the appropriate
# library files and binding into the venv.

- name: Find the venv's python version
  find:
    paths: "{{ ceilometer_bin | dirname }}/lib/"
    patterns: "python*"
    file_type: directory
    recurse: no
  register: python_venv_details

- name: Set python venvs details
  set_fact:
    venv_python_version: "{{ (python_venv_details.files[0].path | basename) }}"
    venv_python_major_version: "{{ (python_venv_details.files[0].path | basename)[:-2] }}"
    venv_python_lib_folder: "{{ python_venv_details.files[0].path }}"

- name: Search for lib files to link
  shell: >-
    {{ (ansible_pkg_mgr == 'apt') | ternary('dpkg -L ' ~ (ceilometer_packages_to_symlink | join(' ')), 'rpm -ql ' ~ (ceilometer_packages_to_symlink | join(' ')) ) }}
    | egrep '^.*{{ venv_python_major_version }}.*/(site|dist)-packages/.*'
  args:
    warn: no
  changed_when: false
  register: _python_files

- name: Link the python host package files into venv
  file:
    src: "{{ item }}"
    dest: "{{ venv_python_lib_folder }}/site-packages/{{ item | basename }}"
    state: link
    force: yes
  with_items: "{{ _python_files.stdout_lines }}"
